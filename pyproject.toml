[project]
name = "mcp-audit-agent"
version = "0.1.0"
description = "Cognitive observability for AI agents interacting with MCP servers"
authors = [
    {name = "Suresh Jain", email = "suresh.jain@ymail.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["mcp", "usability", "ai", "agents", "observability", "cognitive-load"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "click>=8.0.0",
    "rich>=12.0.0", 
    "fastapi>=0.104.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "websockets>=10.0",
    "python-dateutil>=2.8.0",
    "psutil>=5.9.0",
    "requests>=2.28.0",
    "watchdog>=3.0.0",
    "uvicorn[standard]>=0.24.0",
    # OpenTelemetry core (enabled by default)
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "prometheus-client>=0.17.0",
]

[project.optional-dependencies]
dashboard = [
    "uvicorn[standard]>=0.24.0",
    "fastapi>=0.104.0",
]

integrations = [
    "langsmith>=0.1.0",
    "mixpanel>=4.0.0",
    "posthog>=3.0.0",
    # OpenTelemetry exporters (optional for advanced setups)
    "opentelemetry-exporter-jaeger>=1.20.0",
    "opentelemetry-exporter-prometheus>=0.41b0",
    "deprecated>=1.2.0",
]

dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

daemon = [
    "systemd-python>=234",
]

all = [
    "uvicorn[standard]>=0.24.0",
    "fastapi>=0.104.0",
    "langsmith>=0.1.0",
    "mixpanel>=4.0.0",
    "posthog>=3.0.0",
    "systemd-python>=234",
]

[project.urls]
Homepage = "https://github.com/iamksuresh/cognitive-observability-AI-agent-for-mcp.git"
Repository = "https://github.com/iamksuresh/cognitive-observability-AI-agent-for-mcp.git"

[project.scripts]
mcp-audit = "mcp_audit.cli:main"
mcp-audit-daemon = "mcp_audit.daemon:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["mcp_audit"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["mcp_audit"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 